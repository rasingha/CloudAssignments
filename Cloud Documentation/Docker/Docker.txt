**********Docker Documentation**************

1) Initial Launch an EC2 instance

2)Open Putty and Update:
>> sudo yum update
>> sudo yum install docker -y

1) [ec2-user@ip-172-31-93-215 ~]$ sudo su

2) [root@ip-172-31-93-215 ec2-user]# sudo yum install docker -y
	Loaded plugins: priorities, update-motd, upgrade-helper
	Package docker-18.03.1ce-5.0.amzn1.x86_64 already installed and latest version
	Nothing to do
	[root@ip-172-31-93-215 ec2-user]# sudo yum remove docker
	Loaded plugins: priorities, update-motd, upgrade-helper
	Resolving Dependencies
	--> Running transaction check
	---> Package docker.x86_64 0:18.03.1ce-5.0.amzn1 will be erased
	--> Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package      Arch         Version                    Repository           Size
================================================================================
Removing:
 docker       x86_64       18.03.1ce-5.0.amzn1        @amzn-updates       137 M

Transaction Summary
================================================================================
Remove  1 Package

Installed size: 137 M
Is this ok [y/N]: y
Downloading packages:
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Erasing    : docker-18.03.1ce-5.0.amzn1.x86_64                            1/1
  Verifying  : docker-18.03.1ce-5.0.amzn1.x86_64                            1/1

Removed:
  docker.x86_64 0:18.03.1ce-5.0.amzn1

Complete!
[root@ip-172-31-93-215 ec2-user]# yum install -y docker
Loaded plugins: priorities, update-motd, upgrade-helper
Resolving Dependencies
--> Running transaction check
---> Package docker.x86_64 0:18.03.1ce-5.0.amzn1 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package      Arch         Version                     Repository          Size
================================================================================
Installing:
 docker       x86_64       18.03.1ce-5.0.amzn1         amzn-updates        40 M

Transaction Summary
================================================================================
Install  1 Package

Total download size: 40 M
Installed size: 137 M
Downloading packages:
docker-18.03.1ce-5.0.amzn1.x86_64.rpm                      |  40 MB   00:04
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : docker-18.03.1ce-5.0.amzn1.x86_64                            1/1
  Verifying  : docker-18.03.1ce-5.0.amzn1.x86_64                            1/1

Installed:
  docker.x86_64 0:18.03.1ce-5.0.amzn1

Complete!
[root@ip-172-31-93-215 ec2-user]# ps -ef|grep -i docker
root      2956  2872  0 05:29 pts/1    00:00:00 grep --color=auto -i docker
[root@ip-172-31-93-215 ec2-user]# ps -ef | grep -i docker
root      2958  2872  0 05:30 pts/1    00:00:00 grep --color=auto -i docker
[root@ip-172-31-93-215 ec2-user]# ps -ef | grep -i dock
root      2960  2872  0 05:30 pts/1    00:00:00 grep --color=auto -i dock
[root@ip-172-31-93-215 ec2-user]# sudo yum remove docker
Loaded plugins: priorities, update-motd, upgrade-helper
Resolving Dependencies
--> Running transaction check
---> Package docker.x86_64 0:18.03.1ce-5.0.amzn1 will be erased
--> Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package      Arch         Version                    Repository           Size
================================================================================
Removing:
 docker       x86_64       18.03.1ce-5.0.amzn1        @amzn-updates       137 M

Transaction Summary
================================================================================
Remove  1 Package

Installed size: 137 M
Is this ok [y/N]: y
Downloading packages:
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Erasing    : docker-18.03.1ce-5.0.amzn1.x86_64                            1/1
  Verifying  : docker-18.03.1ce-5.0.amzn1.x86_64                            1/1

Removed:
  docker.x86_64 0:18.03.1ce-5.0.amzn1

Complete!
[root@ip-172-31-93-215 ec2-user]# sudo yum install -y docker
Loaded plugins: priorities, update-motd, upgrade-helper
Resolving Dependencies
--> Running transaction check
---> Package docker.x86_64 0:18.03.1ce-5.0.amzn1 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package      Arch         Version                     Repository          Size
================================================================================
Installing:
 docker       x86_64       18.03.1ce-5.0.amzn1         amzn-updates        40 M

Transaction Summary
================================================================================
Install  1 Package

Total download size: 40 M
Installed size: 137 M
Downloading packages:
docker-18.03.1ce-5.0.amzn1.x86_64.rpm                      |  40 MB   00:04
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : docker-18.03.1ce-5.0.amzn1.x86_64                            1/1
  Verifying  : docker-18.03.1ce-5.0.amzn1.x86_64                            1/1

Installed:
  docker.x86_64 0:18.03.1ce-5.0.amzn1

Complete!
[root@ip-172-31-93-215 ec2-user]# sudo ps -ef | grep -i docker
root      3030  2872  0 05:32 pts/1    00:00:00 grep --color=auto -i docker
[root@ip-172-31-93-215 ec2-user]# sudo ps -ef | grep  docker
root      3033  2872  0 05:32 pts/1    00:00:00 grep --color=auto docker
[root@ip-172-31-93-215 ec2-user]# sudo service docker start
Starting cgconfig service:                                 [  OK  ]
Starting docker:        .                                  [  OK  ]
[root@ip-172-31-93-215 ec2-user]# sudo ps
  PID TTY          TIME CMD
 2870 pts/1    00:00:00 sudo
 2871 pts/1    00:00:00 su
 2872 pts/1    00:00:00 bash
 3111 pts/1    00:00:00 dockerd
 3248 pts/1    00:00:00 sudo
 3249 pts/1    00:00:00 ps
[root@ip-172-31-93-215 ec2-user]# sudo docker

Usage:  docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/root/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/root/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/root/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/root/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a runnin                               g container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesyste                               m
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by de                               fault)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit cod                               es

Run 'docker COMMAND --help' for more information on a command.
[root@ip-172-31-93-215 ec2-user]#

